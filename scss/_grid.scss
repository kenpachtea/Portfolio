// ===============================================================================
// Grid Variables
// ===============================================================================

$g-col-width          : 80px;
$g-gutter-width       : 20px;
$g-col-count          : 12;
$g-cont-max-w         : 1180px;

// Set the "context" width for the grid

@function g-context($g-col-width, $g-col-count, $g-gutter-width){
	$g-context: ($g-col-width * $g-col-count) + ($g-gutter-width * ($g-col-count - 1));
	@return $g-context;
}


// ===============================================================================
// Grid Columns
// ===============================================================================


// Caclulate grid columns

@media (min-width: 769px){

    @for $i from 1 through $g-col-count {

        $context: g-context($g-col-width, $g-col-count, $g-gutter-width) !global;
        $target : ($g-col-width * $i) + ($g-gutter-width * ($i - 1));

        // Generate column modifier classes
        .grid__col--#{$i} {
         width: percentage($target / $context);
        
        }
    }
}

// Column styles

[class^='grid__col--'] {
   /** @media (min-width: 1px) and (max-width: 768px) {
        margin-top: 0.8em;
        margin-bottom: 0.8em;
    }
    **/
    
    @media (min-width: 769px) {
        @include doubly(em($g-gutter-width));
        float: left;
        min-height: 1px;
        &:last-of-type {
            float: right;
        }
    }
}


// ===============================================================================
// Grid Container
// ===============================================================================


.row {
    @extend %clearfix;
    @extend .centered;
    width: 90%;
    
    // Make nested grid 100%
    [class*="grid__col--"] > & {
        width: 100%;
    }
    
    // Set a max-width for grid container
    @media (min-width: 1200px) {
        width: $g-cont-max-w;
    }
}








